name: Run style check and tests

on:
  workflow_call:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  check-styles:
    name: Check styles
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
        with:
          elixir-version: "1.15.2" # [Required] Define the Elixir version
          otp-version: "26.0" # [Required] Define the Erlang/OTP version

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build/dev
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix do deps.get, deps.compile, compile

      - name: Run style checks
        run: mix ci

  run-tests:
    name: Run tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: cen_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
        with:
          elixir-version: "1.15.2" # [Required] Define the Elixir version
          otp-version: "26.0" # [Required] Define the Erlang/OTP version

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build/test
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix do deps.get --only test, deps.compile, compile
        env:
          MIX_ENV: test

      - name: Setup database
        run: mix ecto.setup
        env:
          MIX_ENV: test

      - name: Run tests
        run: mix test --cover
